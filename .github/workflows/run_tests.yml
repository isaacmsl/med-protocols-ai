name: Run Tests

on:
  push:
    branches:
      - main

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  ENDPOINT_QUERY_AI_MAX_SIZE: ${{ secrets.ENDPOINT_QUERY_AI_MAX_SIZE }}
  ENDPOINT_EMBEDDING_TEXT_MAX_SIZE: ${{ secrets.ENDPOINT_EMBEDDING_TEXT_MAX_SIZE }}
  ENDPOINT_EMBEDDING_MODEL: ${{ secrets.ENDPOINT_EMBEDDING_MODEL }}
  CHROMA_EMBEDDING_MODEL: ${{ secrets.CHROMA_EMBEDDING_MODEL }}
  KNOWLEDGE_PDF_DIR: ${{ secrets.KNOWLEDGE_PDF_DIR }}
  LANGSMITH_TRACING: ${{ secrets.LANGSMITH_TRACING }}
  LANGSMITH_ENDPOINT: ${{ secrets.LANGSMITH_ENDPOINT }}
  LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
  LANGSMITH_PROJECT: ${{ secrets.LANGSMITH_PROJECT }}
  CHROMA_HOST: ${{ secrets.CHROMA_HOST }}
  CHROMA_PORT: ${{ secrets.CHROMA_PORT }}
  
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12 # Escolha a vers√£o do Python desejada

      # Step 3: Create virtual environment
      - name: Create virtual environment
        run: python -m venv .venv

      # Step 4: Activate virtual environment and install dependencies
      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install -r requirements.txt

      # Step 5: Run tests
      - name: Run tests
        run: |
          source .venv/bin/activate
          python run_tests.py
